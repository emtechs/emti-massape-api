// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CategoryPeriod {
  ANO
  BIMESTRE
  SEMESTRE
}

model User {
  id          String         @id @default(uuid())
  is_admin    Boolean        @default(false)
  is_active   Boolean        @default(true)
  created_at  DateTime       @default(now())
  work_school SchoolServer[]

  @@map("users")
}

model School {
  id         String         @id @default(uuid())
  name       String         @unique @db.VarChar(254)
  is_active  Boolean        @default(true)
  created_at DateTime       @default(now())
  servers    SchoolServer[]
  classes    ClassYear[]

  @@map("schools")
}

model Student {
  id         String             @id @default(uuid())
  name       String             @db.VarChar(254)
  registry   String             @unique @db.VarChar(50)
  is_active  Boolean            @default(true)
  created_at DateTime           @default(now())
  schools    ClassYearStudent[]
  classes    ClassStudent[]

  @@map("students")
}

model Period {
  id           String         @id @default(uuid())
  name         String         @db.VarChar(50)
  category     CategoryPeriod
  date_initial DateTime       @db.Date
  date_final   DateTime       @db.Date
  year         String         @db.VarChar(50)

  @@map("periods")
}

model SchoolServer {
  key       String @unique @default(uuid())
  school    School @relation(fields: [school_id], references: [id], onDelete: Cascade)
  school_id String
  server    User   @relation(fields: [server_id], references: [id], onDelete: Cascade)
  server_id String

  @@id([school_id, server_id])
  @@map("school_server")
}

model ClassStudent {
  key        String   @unique @default(uuid())
  year       String   @db.VarChar(254)
  class_id   String   @db.VarChar(254)
  student    Student  @relation(fields: [student_id], references: [id], onDelete: Cascade)
  student_id String
  created_at DateTime @default(now())

  @@id([year, class_id, student_id])
  @@map("class_student")
}

model ClassYear {
  key       String             @unique @default(uuid())
  year      String             @db.VarChar(254)
  class_id  String             @db.VarChar(254)
  school    School             @relation(fields: [school_id], references: [id], onDelete: Cascade)
  school_id String
  students  ClassYearStudent[]

  @@id([year, class_id, school_id])
  @@map("class_year")
}

model ClassYearStudent {
  key        String    @unique @default(uuid())
  class      ClassYear @relation(fields: [class_id], references: [key], onDelete: Cascade)
  class_id   String
  student    Student   @relation(fields: [student_id], references: [id], onDelete: Cascade)
  student_id String
  created_at DateTime  @default(now())

  @@id([class_id, student_id])
  @@map("class_year_student")
}
